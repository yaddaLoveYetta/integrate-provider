<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
         PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
         "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	<!-- 数据库驱动包位置 -->
	<classPathEntry
		location="D:/Program Files/apache-maven-3.2.5/rep/maven_lib/mysql/mysql-connector-java/5.1.8/mysql-connector-java-5.1.8.jar" />
	<context id="DB2Tables" targetRuntime="MyBatis3">
		<commentGenerator>
			<property name="suppressDate" value="false" />
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="false" />
		</commentGenerator>
		<!-- 数据库链接URL、用户名、密码 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://120.24.51.181:3306/bbpark_new?characterEncoding=UTF-8"
			userId="ywpark" password="zaq12wsx">
			<!--<jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver" connectionURL="jdbc:oracle:thin:@localhost:1521:orcl" 
				userId="msa" password="msa"> -->
		</jdbcConnection>
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成模型的包名和位置 -->
		<javaModelGenerator targetPackage="com.yadda.integrate.model" targetProject="E:/mybatis/integrate-api/src/main/java">
			<!-- 是否对model添加 构造函数 -->
			<property name="constructorBased" value="false" />
			<!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
			<property name="enableSubPackages" value="true" />
			<!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
			<property name="trimStrings" value="true" />
			<!-- 是否创建一个不可变的类，如果为true， 那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类 -->
			<property name="immutable" value="false" />
			<!-- 给Model添加一个父类 -->
			<property name="rootClass" value="com.yadda.integrate.model.RootModel" />

		</javaModelGenerator>

		<!-- 生成的映射文件包名和位置 -->
		<sqlMapGenerator targetPackage="mapper" targetProject="E:/mybatis/integrate-provider/src/main/resources">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>

		<!-- 生成DAO的包名和位置 -->
		<!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口 targetPackage/targetProject:同javaModelGenerator type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）： 
			1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML； 2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中； 
			3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML； 注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER -->
		<javaClientGenerator type="XMLMAPPER" targetPackage="com.yadda.integrate.provider.dao"
			targetProject="E:/mybatis/integrate-provider/src/main/java">
			<property name="enableSubPackages" value="true" />
			<!-- <property name="rootInterface" value="Serializable" /> -->
		</javaClientGenerator>

		<!-- 要生成那些表(更改tableName和domainObjectName就可以) -->
		<table tableName="t_AppUser" domainObjectName="AppUser" enableCountByExample="true" enableUpdateByExample="true"
			enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
		</table>
		<table tableName="KS_SECURITYRESOURCES" domainObjectName="SecurityResources" enableCountByExample="false"
			enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false" />
		<table tableName="t_AppUserTemp" domainObjectName="AppUserTemp" enableCountByExample="false"
			enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false" />


	</context>
</generatorConfiguration> 
